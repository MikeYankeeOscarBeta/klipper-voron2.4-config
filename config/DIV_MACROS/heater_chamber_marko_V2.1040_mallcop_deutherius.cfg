#####################################################################
#   Chamber Heater
#####################################################################
[heater_generic heater_chamber]
heater_pin: z:P2.7
sensor_type: EPCOS 100K B57560G104F
sensor_pin: z:P0.25
control: pid
pid_Kp: 61.470837
pid_Ki: 0.5
pid_Kd: 0
pwm_cycle_time: 0.01
min_temp: 0
max_temp: 75
max_power: 1

[verify_heater heater_chamber]
max_error: 120
check_gain_time: 120
hysteresis: 50
heating_gain: 1

[gcode_macro SET_CHAMBER]
gcode:
  {% set chamber_target = params.TEMP|default(0)|float %}
  SET_HEATER_TEMPERATURE heater=heater_chamber target={chamber_target}

[gcode_macro HEATED_CHAMBER_VAR]
variable_heat_cancel_v: 0
variable_no_loops_v: 0
variable_setpoint_temp_v: 0
gcode:
  M117

[gcode_macro HEATSOAK_CHAMBER_CANCEL]
gcode:
  SET_GCODE_VARIABLE MACRO=HEATED_CHAMBER_VAR VARIABLE=heat_cancel_v VALUE=1

[delayed_gcode max_power_loop]
gcode:
  _keep_max_power TEMP={printer["gcode_macro HEATED_CHAMBER_VAR"].setpoint_temp_v}
  {% if printer["gcode_macro HEATED_CHAMBER_VAR"].heat_cancel_v == 0   %} 
    {% if printer['heater_generic heater_chamber'].temperature < printer["gcode_macro HEATED_CHAMBER_VAR"].setpoint_temp_v *0.95  %} 
      {% if printer["gcode_macro HEATED_CHAMBER_VAR"].no_loops_v < 200 %} #200*6s=20 min
        UPDATE_DELAYED_GCODE ID=max_power_loop DURATION=6
      {% else %}	
        RESPOND MSG="Chamber heater time out" 
      {% endif %}
    {% else %}	
        RESPOND MSG="Chamber temperature reached" 
        SET_CHAMBER TEMP={printer["gcode_macro HEATED_CHAMBER_VAR"].setpoint_temp_v}
    {% endif %}
  {% else %}	
    RESPOND MSG="Heating cancel"
    SET_GCODE_VARIABLE MACRO=HEATED_CHAMBER_VAR VARIABLE=heat_cancel_v VALUE=0
  {% endif %}	


[gcode_macro HEATSOAK_CHAMBER]
description: Heatsoak chamber to a specific temperature with a timeout
gcode:
    {% set SETPOINT_TEMP = params.TEMP|default(0)|float %}

    SET_GCODE_VARIABLE MACRO=HEATED_CHAMBER_VAR VARIABLE=no_loops_v VALUE=0
    SET_GCODE_VARIABLE MACRO=HEATED_CHAMBER_VAR VARIABLE=heat_cancel_v VALUE=0
    
	{% if SETPOINT_TEMP < 75  %}  
        SET_CHAMBER TEMP={printer['heater_generic heater_chamber'].temperature|float} 
		SET_GCODE_VARIABLE MACRO=HEATED_CHAMBER_VAR VARIABLE=setpoint_temp_v VALUE={SETPOINT_TEMP} 
        _keep_max_power TEMP={SETPOINT_TEMP}
        UPDATE_DELAYED_GCODE ID=max_power_loop DURATION=6
	{% else %}	
		RESPOND MSG="Chamber temperature set to high"	
	{% endif %}	

[gcode_macro _keep_max_power]
# This macro is needed to allow klipper populate a new value in the printer[...].temperature variable
# as each variables are populated only once at the beginning of every macro call
gcode:
    {% set SETPOINT_TEMP = params.TEMP|default(0)|float %}
    {% set SET_TEMP = printer['heater_generic heater_chamber'].target|float %}
    {% set CURRENT_POWER = printer.heater_bed.power|float %}
    {% set CURRENT_FAN = printer['heater_generic heater_chamber'].power|float %}
    {% set NEW_SETPOINT_TEMP = SET_TEMP %}

    {% set no_loops = printer["gcode_macro HEATED_CHAMBER_VAR"].no_loops_v|int %}

    SET_GCODE_VARIABLE MACRO=HEATED_CHAMBER_VAR VARIABLE=no_loops_v VALUE={no_loops + 1}
    
    {% if CURRENT_POWER < 0.90 %}            
        {% if CURRENT_FAN < 1.0 %}
            {% set NEW_SETPOINT_TEMP = SET_TEMP + 0.25 %}
        {% endif %}
    {% endif %}
 
    {% if CURRENT_POWER > 0.98 %}     
        {% if CURRENT_FAN > 0.0 %}
            {% set NEW_SETPOINT_TEMP = SET_TEMP - 0.25 %}
        {% endif %}
    {% endif %}
    
    {% if NEW_SETPOINT_TEMP > SETPOINT_TEMP %}
        {% set NEW_SETPOINT_TEMP = SETPOINT_TEMP %}
     {% elif NEW_SETPOINT_TEMP < 0.0 %}
        {% set NEW_SETPOINT_TEMP = 0.0 %}
    {% endif %}
    
    {% if SET_TEMP != NEW_SETPOINT_TEMP %}
		SET_HEATER_TEMPERATURE HEATER=heater_chamber TARGET={NEW_SETPOINT_TEMP}
    {% endif %}

    {action_respond_info("Current power: %.2f, Current fan: %.2f, Current setpoint: %.1f " %(CURRENT_POWER, CURRENT_FAN, NEW_SETPOINT_TEMP))}
