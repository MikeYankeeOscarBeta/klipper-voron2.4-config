[mcu AVR0]
canbus_uuid: ebbe4205ce6d # h36_combo with rapido2uhf

[temperature_sensor canboard_AVR0_mcu]
sensor_type: temperature_mcu
sensor_mcu: AVR0
min_temp: 0
max_temp: 150

[temperature_sensor canboard_AVR0_driver]
sensor_type: Generic 3950
sensor_pin: AVR0: PA3
min_temp:0
max_temp:150

[adc_temperature canboard_AVR0_5V_Monitor]
temperature1: 5
voltage1: 3.0
temperature2: 4
voltage2: 2.4
temperature3: 3
voltage3: 1.8

[adc_temperature canboard_AVR0_24V_Monitor]
temperature1: 24
voltage1: 3.13
temperature2: 22
voltage2: 2.87
temperature3: 21
voltage3: 2.74

[temperature_sensor canboard_AVR0_5V_Monitor]
sensor_type: canboard_AVR0_5V_Monitor
sensor_pin: AVR0:PA0   #5V_MON
adc_voltage: 3.3
voltage_offset: 0

[temperature_sensor canboard_AVR0_24V_Monitor]
sensor_type: canboard_AVR0_24V_Monitor
sensor_pin: AVR0:PA4   #24V_MON
adc_voltage: 3.3
voltage_offset: 0

#####################################################################
#	I/O
#####################################################################

# IO.0: PA15
# IO.1: PC7 
# IO.2: PA8
# IO.3/RGB0: PA10
# IO.4/RGB1: PB1

# [neopixel sb_leds]
# pin: sb_can_th: PA10 #IO.3/RGB0
# chain_count: 10
# color_order: GRB, GRB, GRB, GRB, GRB, GRB, GRB, GRB, GRBW, GRBW
# initial_RED: 0.5 
# initial_GREEN: 0.5
# initial_BLUE: 0.5
# initial_WHITE: 0.5

# [neopixel ext_leds]
# pin: sb_can_th: PB1 #IO.4/RGB1
# chain_count: 1
# color_order: GRB
# initial_RED: 0.5
# initial_GREEN: 0.5
# initial_BLUE: 0.5
# initial_WHITE: 0.5

[extruder]
step_pin: AVR0:PB9
dir_pin: AVR0:PB8
enable_pin: !AVR0:PB7
rotation_distance: 22.9046186117778139935
gear_ratio: 50:10               #BMG Gear Ratio
microsteps: 32
full_steps_per_rotation: 200    #200 for 1.8 degree, 400 for 0.9 degree
nozzle_diameter: 0.400
filament_diameter: 1.75
heater_pin: AVR0:PA7

sensor_type: PT1000
pullup_resistor: 2200
sensor_pin: AVR0:PA6

min_temp: 10
max_temp: 355 ## Rapido 2 Maximum Temperature is 350degC
max_power: 1.0
min_extrude_temp: 170

### Phaetus Rapido 2 Plus UHF PIDs
control: pid
### PT1000 MAX autotune @260degC
pid_Kp:25.423
pid_Ki:2.042
pid_Kd:79.130

pressure_advance: 0.045
pressure_advance_smooth_time: 0.040
max_extrude_cross_section: 30 ## Phaetus Rapido 2 UHF with 0.4mm nozzle

# ## EXTRUDER MOTOR
[tmc2209 extruder]
#uart_pin: PE1
uart_pin: AVR0:PC14
interpolate: false
run_current: 0.8
sense_resistor: 0.110
stealthchop_threshold: 0
#diag_pin: AVR0:PC15

[fan_generic AVR0_partfan]
pin: AVR0:PB15
#tachometer_pin: AVR0: PB14
#tachometer_ppr: 2
#tachometer_poll_interval: 0.00075


[heater_fan AVR0_hotend_fan]
pin: AVR0: PA9
max_power: 1.0
kick_start_time: 0.5
heater: extruder
tachometer_pin: ^AVR0: PC6
tachometer_ppr: 2
tachometer_poll_interval: 0.00075

# [fan_generic fan2]
# pin: AVR0:PB13
# max_power:1.0
# shutdown_speed:0.0
# cycle_time:0.5
# hardware_pwm:false
# kick_start_time:0.10
# off_below:0.1

# [fan_generic fan3]
# pin: AVR0:PA5
# max_power:1.0
# shutdown_speed:0.0
# cycle_time:0.5
# hardware_pwm:false
# kick_start_time:0.10
# off_below:0.1
# tachometer_pin: AVR0:PB0
# # Please make sure the feedback level does not exceed 5V!
# #tachometer_ppr:
# #tachometer_poll_interval:

[tool AVR0]
tool_number: 0
extruder: extruder
fan: fan_generic AVR0_partfan
gcode_x_offset: 0
gcode_y_offset: 0
gcode_z_offset: 0

params_park_x: 320.250
params_park_y: 4.100
params_park_z: 425.000

params_close_y: 30.0
params_safe_y: 120.0
params_input_shaper_freq_x: 88.6
params_input_shaper_type_x: 'mzv'
params_input_shaper_damping_ratio_x: 0.055
params_input_shaper_freq_y: 73.0
params_input_shaper_type_y: 'mzv'
params_input_shaper_damping_ratio_y: 0.071

# Change tool number if needed
[tool_probe AVR0]
pin: ^AVR0:PA8
tool: 0

## How probe.z_offset works with stealthchanger:
## z_offset is simply put the trigger distance from when nozzle touches the bed to when tap is triggered.
## - is higher + is lower, so a larger negative number means nozzle higher off the bed,


#z_offset: -1.400
#z_offset: -0.093
#z_offset: -1.200 #too tall for abs@60C and pccf@75C
#z_offset: -1.050 #too low for abs@60C, good for pccf@75C with 0.01mm first layer lift 
#z_offset: -1.150 #better for abs@60C, untested for pccf@75C
# new offsets with fysetc cnc shuttle r2
#z_offset: -1.130 #tpu test 60degC Bed 0 chamber
#z_offset: -1.020 #ABS at 70degC Chamber needed lower z_offset. WAY TOO LOW
#z_offset: -1.080 #ABS at 70degC Chamber needed lower z_offset. WAY TOO LOW
#z_offset: -1.130 #no idea at this point
#z_offset: -1.180 #for ABS at 70degC chamber 115degC bed, homed at 0degC. need a little more z up
#z_offset: -1.220 #for ABS at 70degC chamber 115degC bed, homed at 0degC. need a little more z up
#z_offset: -1.250 #for ABS at 70degC chamber 115degC bed, homed at 0degC. need a little more z up
#z_offset: -1.320 #for ABS at 70degC chamber 115degC bed, homed at 0degC. need a little more z up
#z_offset: -1.300 #for ABS at 70degC chamber 115degC bed, homed at 0degC. need a little more z up
z_offset: -1.310 #for ABS at 70degC chamber 115degC bed, homed at 0degC. need a little more z up
#z_offset: 

speed: 3.0
samples: 3
samples_result: median
sample_retract_dist: 2.0
#samples_tolerance: 0.02
#samples_tolerance: 0.0075
samples_tolerance: 0.0070
samples_tolerance_retries: 3
drop_first_result: True
activate_gcode:
  _TAP_PROBE_ACTIVATE HEATER=extruder TEMP=150

[adxl345 AVR0]
cs_pin: AVR0:PB12
spi_software_sclk_pin: AVR0:PB10
spi_software_mosi_pin: AVR0:PB11
spi_software_miso_pin: AVR0:PB2
#axes_map: x,z,y
axes_map: -y,z,-x


# [filament_switch_sensor filament_sensor_AVR0]
# switch_pin: AVR0:PC3
# pause_on_runout: FALSE
# runout_gcode:
#   M117 Runout sensor AVR0 reports: Runout
#   SET_GCODE_VARIABLE MACRO=AVR0 VARIABLE=filament_consumed VALUE=1
# insert_gcode:
#   M117 Runout sensor AVR0 reports: Filament Detected
#   SET_GCODE_VARIABLE MACRO=AVR0 VARIABLE=filament_consumed VALUE=0

[gcode_macro AVR0]
variable_active: 0
variable_filament_consumed: 0
gcode:
  {% if printer.toolhead.homed_axes != "xyz" %}
    {action_respond_info("Please home XYZ first")}
  {% else %}
    _TOOLCHANGER_DISABLE_FILAMENT_SENSORS
    SET_GCODE_VARIABLE MACRO=AVR0 VARIABLE=active VALUE=1
    ACTIVATE_EXTRUDER EXTRUDER=extruder
    SELECT_TOOL T=0
  {% endif %}

[gcode_macro T0]
variable_realtool: "AVR0"
#variable_backuptool: "T1"
variable_backuptool: ""
variable_color: ""
gcode:
  {% set consumed = printer["gcode_macro " ~ realtool].filament_consumed|int %}
  {% if consumed and backuptool %}
    { action_respond_info(realtool ~ " empty loading backup") }
    {backuptool}
  {% else %}
    { action_respond_info("Switching to " ~ realtool) }
    {realtool}
  {% endif %}
